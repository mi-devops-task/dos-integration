version: "3.9"
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   hostname: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181
  #   networks:
  #     default:
  #       aliases:
  #         - zookeeper.$PROJECT_NAME_SHORT.local
  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka
  #   hostname: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:9092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   networks:
  #     default:
  #       aliases:
  #         - kafka.$PROJECT_NAME_SHORT.local

  event-receiver:
    image: $DOCKER_REGISTRY/event-receiver:latest
    container_name: event-receiver
    hostname: event-receiver
    environment:
      AWS_LAMBDA_FUNCTION_NAME: event-receiver
      LOG_LEVEL: DEBUG
      POWERTOOLS_SERVICE_NAME: $TEAM_ID
      PROFILE: $PROFILE
      MOCK_MODE: $MOCK_MODE
    volumes:
      - type: bind
        source: $TMP_DIR
        target: /tmp
    ports:
      - 9000:8080


  event-sender:
    image: $DOCKER_REGISTRY/event-sender:latest
    container_name: event-sender
    hostname: event-sender
    environment:
      AWS_LAMBDA_FUNCTION_NAME: event-sender
      DOS_API_GATEWAY_USERNAME: user
      DOS_API_GATEWAY_PASSWORD: password
      DOS_API_GATEWAY_URL: http://mockserver:1080/api/change-request
      DOS_API_GATEWAY_REQUEST_TIMEOUT: 30
      LOG_LEVEL: DEBUG
      POWERTOOLS_SERVICE_NAME: $TEAM_ID
      PROFILE: $PROFILE
    volumes:
      - type: bind
        source: $TMP_DIR
        target: /tmp
    ports:
      - 9002:8080

  event-processor:
    image: $DOCKER_REGISTRY/event-processor:latest
    container_name: event-processor
    hostname: event-processor
    environment:
      AWS_LAMBDA_FUNCTION_NAME: event-processor
      LOG_LEVEL: DEBUG
      POWERTOOLS_SERVICE_NAME: $TEAM_ID
      PROFILE: $PROFILE
      AWS_REGION: eu-west-2
      DB_SERVER: $DB_SERVER
      DB_PORT: $DB_PORT
      DB_NAME: $DB_NAME
      DB_USER_NAME: $DB_USER_NAME
      DB_PASSWORD: $DB_PASSWORD
      EVENT_SENDER_LAMBDA_NAME: event-sender
    volumes:
      - type: bind
        source: $TMP_DIR
        target: /tmp
    ports:
      - 9001:8080
    depends_on:
      mock-dos:
        condition: service_healthy

  mock-dos:
    image: postgres:12
    hostname: mock-dos
    container_name: mock-dos
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - type: bind
        source: $TMP_DIR/sql
        target: /docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    healthcheck:
      test: POSTGRES_PASSWORD=postgres psql -h localhost -p 5432 -d postgres -U
        postgres -c "SELECT id from services" || exit 1
      interval: 5s
      timeout: 10s
      retries: 100

  mockserver:
    image: jamesdbloom/mockserver:latest
    hostname: mockserver
    container_name: mockserver
    stdin_open: true
    tty: true
    ports:
      - 1080:1080
      - 1090:1090

networks:
  default:
    name: $DOCKER_NETWORK
